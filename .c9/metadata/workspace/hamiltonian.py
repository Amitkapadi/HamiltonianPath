{"changed":true,"filter":false,"title":"hamiltonian.py","tooltip":"/hamiltonian.py","value":"import networkx as nx\n\nG = nx.Graph()\n\ndef getfor(formula):\n    formula = formula[1:-1]\n    clauses = formula.split(\"),(\")\n    tuplas = []\n    for clause in clauses:\n        clause = tuple(map(int,clause.split(\",\")))\n        tuplas.append(clause)\n    return tuplas\n\ndef main(str):\n    g = getfor(str)\n    G.add_edges_from(g)\n    p = hamilton(G)\n    return p\n\ndef hamilton(G):\n    F = [(G,[G.nodes()[0]])]\n    n = G.number_of_nodes()\n    while F:\n        graph,path = F.pop()\n        confs = []\n        \n        for node in graph.neighbors(path[-1]):\n            conf_p = path[:]\n            conf_p.append(node)\n            conf_g = nx.Graph(graph)\n            conf_g.remove_node(path[-1])\n            confs.append((conf_g,conf_p))\n        for g,p in confs:\n            if len(p)==n:\n                return p\n            else:\n                F.append((g,p))\n    return None","undoManager":{"mark":77,"position":100,"stack":[[{"start":{"row":3,"column":9},"end":{"row":3,"column":10},"action":"remove","lines":["o"],"id":72}],[{"start":{"row":3,"column":8},"end":{"row":3,"column":9},"action":"remove","lines":["h"],"id":73}],[{"start":{"row":3,"column":7},"end":{"row":3,"column":8},"action":"insert","lines":["h"],"id":74}],[{"start":{"row":3,"column":8},"end":{"row":3,"column":9},"action":"insert","lines":["o"],"id":75}],[{"start":{"row":3,"column":9},"end":{"row":3,"column":10},"action":"insert","lines":["l"],"id":76}],[{"start":{"row":3,"column":10},"end":{"row":3,"column":11},"action":"insert","lines":["a"],"id":77}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["print \"hola\"",""],"id":78}],[{"start":{"row":2,"column":14},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":79}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":80}],[{"start":{"row":4,"column":0},"end":{"row":11,"column":17},"action":"insert","lines":["def getfor(formula):","    formula = formula[1:-1]","    clauses = formula.split(\"),(\")","    tuplas = []","    for clause in clauses:","        clause = tuple(map(int,clause.split(\",\")))","        tuplas.append(clause)","    return tuplas"],"id":81}],[{"start":{"row":12,"column":0},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":82}],[{"start":{"row":12,"column":0},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":83}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":1},"action":"insert","lines":["d"],"id":84}],[{"start":{"row":13,"column":1},"end":{"row":13,"column":2},"action":"insert","lines":["e"],"id":85}],[{"start":{"row":13,"column":2},"end":{"row":13,"column":3},"action":"insert","lines":["f"],"id":86}],[{"start":{"row":13,"column":3},"end":{"row":13,"column":4},"action":"insert","lines":[" "],"id":87}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":5},"action":"insert","lines":["m"],"id":88}],[{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"insert","lines":["i"],"id":89}],[{"start":{"row":13,"column":6},"end":{"row":13,"column":7},"action":"insert","lines":["a"],"id":90}],[{"start":{"row":13,"column":7},"end":{"row":13,"column":8},"action":"insert","lines":["n"],"id":91}],[{"start":{"row":13,"column":7},"end":{"row":13,"column":8},"action":"remove","lines":["n"],"id":92}],[{"start":{"row":13,"column":6},"end":{"row":13,"column":7},"action":"remove","lines":["a"],"id":93}],[{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"remove","lines":["i"],"id":94}],[{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"insert","lines":["a"],"id":95}],[{"start":{"row":13,"column":6},"end":{"row":13,"column":7},"action":"insert","lines":["i"],"id":96}],[{"start":{"row":13,"column":7},"end":{"row":13,"column":8},"action":"insert","lines":["n"],"id":97}],[{"start":{"row":13,"column":8},"end":{"row":13,"column":10},"action":"insert","lines":["()"],"id":98}],[{"start":{"row":13,"column":9},"end":{"row":13,"column":10},"action":"insert","lines":["s"],"id":99}],[{"start":{"row":13,"column":10},"end":{"row":13,"column":11},"action":"insert","lines":["t"],"id":100}],[{"start":{"row":13,"column":11},"end":{"row":13,"column":12},"action":"insert","lines":["r"],"id":101}],[{"start":{"row":13,"column":13},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":102}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "],"id":103}],[{"start":{"row":13,"column":13},"end":{"row":13,"column":14},"action":"insert","lines":[":"],"id":104}],[{"start":{"row":14,"column":4},"end":{"row":14,"column":23},"action":"insert","lines":["g = getfor(formula)"],"id":105}],[{"start":{"row":14,"column":15},"end":{"row":14,"column":22},"action":"remove","lines":["formula"],"id":106},{"start":{"row":14,"column":15},"end":{"row":14,"column":16},"action":"insert","lines":["s"]}],[{"start":{"row":14,"column":16},"end":{"row":14,"column":17},"action":"insert","lines":["t"],"id":107}],[{"start":{"row":14,"column":17},"end":{"row":14,"column":18},"action":"insert","lines":["r"],"id":108}],[{"start":{"row":14,"column":19},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":109},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":15,"column":4},"end":{"row":15,"column":24},"action":"insert","lines":[" G.add_edges_from(g)"],"id":110}],[{"start":{"row":15,"column":24},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":111},{"start":{"row":16,"column":0},"end":{"row":16,"column":5},"action":"insert","lines":["     "]}],[{"start":{"row":16,"column":5},"end":{"row":16,"column":6},"action":"insert","lines":["g"],"id":112}],[{"start":{"row":16,"column":6},"end":{"row":16,"column":7},"action":"insert","lines":["a"],"id":113}],[{"start":{"row":16,"column":6},"end":{"row":16,"column":7},"action":"remove","lines":["a"],"id":114}],[{"start":{"row":16,"column":5},"end":{"row":16,"column":6},"action":"remove","lines":["g"],"id":115}],[{"start":{"row":16,"column":5},"end":{"row":16,"column":6},"action":"insert","lines":["h"],"id":116}],[{"start":{"row":16,"column":6},"end":{"row":16,"column":7},"action":"insert","lines":["a"],"id":117}],[{"start":{"row":16,"column":7},"end":{"row":16,"column":8},"action":"insert","lines":["m"],"id":118}],[{"start":{"row":16,"column":8},"end":{"row":16,"column":9},"action":"insert","lines":["i"],"id":119}],[{"start":{"row":16,"column":9},"end":{"row":16,"column":10},"action":"insert","lines":["l"],"id":120}],[{"start":{"row":16,"column":5},"end":{"row":16,"column":10},"action":"remove","lines":["hamil"],"id":121},{"start":{"row":16,"column":5},"end":{"row":16,"column":15},"action":"insert","lines":["hamilton()"]}],[{"start":{"row":16,"column":14},"end":{"row":16,"column":15},"action":"insert","lines":["G"],"id":122}],[{"start":{"row":16,"column":14},"end":{"row":16,"column":15},"action":"remove","lines":["G"],"id":123}],[{"start":{"row":16,"column":14},"end":{"row":16,"column":15},"action":"insert","lines":["g"],"id":124}],[{"start":{"row":16,"column":14},"end":{"row":16,"column":15},"action":"remove","lines":["g"],"id":125}],[{"start":{"row":16,"column":14},"end":{"row":16,"column":15},"action":"insert","lines":["G"],"id":126}],[{"start":{"row":15,"column":4},"end":{"row":15,"column":5},"action":"remove","lines":[" "],"id":127}],[{"start":{"row":16,"column":4},"end":{"row":16,"column":5},"action":"remove","lines":[" "],"id":128}],[{"start":{"row":16,"column":4},"end":{"row":16,"column":5},"action":"insert","lines":["o"],"id":129}],[{"start":{"row":16,"column":5},"end":{"row":16,"column":6},"action":"insert","lines":[" "],"id":130}],[{"start":{"row":16,"column":6},"end":{"row":16,"column":7},"action":"insert","lines":["="],"id":131}],[{"start":{"row":16,"column":7},"end":{"row":16,"column":8},"action":"insert","lines":[" "],"id":132}],[{"start":{"row":16,"column":7},"end":{"row":16,"column":8},"action":"remove","lines":[" "],"id":133}],[{"start":{"row":16,"column":6},"end":{"row":16,"column":7},"action":"remove","lines":["="],"id":134}],[{"start":{"row":16,"column":5},"end":{"row":16,"column":6},"action":"remove","lines":[" "],"id":135}],[{"start":{"row":16,"column":4},"end":{"row":16,"column":5},"action":"remove","lines":["o"],"id":136}],[{"start":{"row":16,"column":4},"end":{"row":16,"column":5},"action":"insert","lines":["p"],"id":137}],[{"start":{"row":16,"column":5},"end":{"row":16,"column":6},"action":"insert","lines":[" "],"id":138}],[{"start":{"row":16,"column":6},"end":{"row":16,"column":7},"action":"insert","lines":["="],"id":139}],[{"start":{"row":16,"column":7},"end":{"row":16,"column":8},"action":"insert","lines":[" "],"id":140}],[{"start":{"row":16,"column":19},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":141},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":17,"column":4},"end":{"row":17,"column":5},"action":"insert","lines":["r"],"id":142}],[{"start":{"row":17,"column":5},"end":{"row":17,"column":6},"action":"insert","lines":["e"],"id":143}],[{"start":{"row":17,"column":6},"end":{"row":17,"column":7},"action":"insert","lines":["t"],"id":144}],[{"start":{"row":17,"column":7},"end":{"row":17,"column":8},"action":"insert","lines":["u"],"id":145}],[{"start":{"row":17,"column":8},"end":{"row":17,"column":9},"action":"insert","lines":["r"],"id":146}],[{"start":{"row":17,"column":9},"end":{"row":17,"column":10},"action":"insert","lines":["n"],"id":147}],[{"start":{"row":17,"column":10},"end":{"row":17,"column":11},"action":"insert","lines":[" "],"id":148}],[{"start":{"row":17,"column":11},"end":{"row":17,"column":12},"action":"insert","lines":["p"],"id":149}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":1},"action":"insert","lines":["n"],"id":150}],[{"start":{"row":18,"column":1},"end":{"row":18,"column":2},"action":"insert","lines":["x"],"id":151}],[{"start":{"row":18,"column":2},"end":{"row":18,"column":3},"action":"insert","lines":["."],"id":152}],[{"start":{"row":18,"column":3},"end":{"row":18,"column":4},"action":"insert","lines":["h"],"id":153}],[{"start":{"row":18,"column":3},"end":{"row":18,"column":4},"action":"remove","lines":["h"],"id":154}],[{"start":{"row":18,"column":2},"end":{"row":18,"column":3},"action":"remove","lines":["."],"id":155}],[{"start":{"row":18,"column":1},"end":{"row":18,"column":2},"action":"remove","lines":["x"],"id":156}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":1},"action":"remove","lines":["n"],"id":157}],[{"start":{"row":24,"column":18},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":158},{"start":{"row":25,"column":0},"end":{"row":25,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":25,"column":8},"end":{"row":25,"column":9},"action":"insert","lines":["n"],"id":159}],[{"start":{"row":25,"column":9},"end":{"row":25,"column":10},"action":"insert","lines":["x"],"id":160}],[{"start":{"row":25,"column":10},"end":{"row":25,"column":11},"action":"insert","lines":["."],"id":161}],[{"start":{"row":25,"column":11},"end":{"row":25,"column":12},"action":"insert","lines":["H"],"id":162}],[{"start":{"row":25,"column":12},"end":{"row":25,"column":13},"action":"insert","lines":["a"],"id":163}],[{"start":{"row":25,"column":13},"end":{"row":25,"column":14},"action":"insert","lines":["m"],"id":164}],[{"start":{"row":25,"column":13},"end":{"row":25,"column":14},"action":"remove","lines":["m"],"id":165}],[{"start":{"row":25,"column":12},"end":{"row":25,"column":13},"action":"remove","lines":["a"],"id":166}],[{"start":{"row":25,"column":11},"end":{"row":25,"column":12},"action":"remove","lines":["H"],"id":167}],[{"start":{"row":25,"column":10},"end":{"row":25,"column":11},"action":"remove","lines":["."],"id":168}],[{"start":{"row":25,"column":10},"end":{"row":25,"column":11},"action":"insert","lines":["."],"id":169}],[{"start":{"row":25,"column":10},"end":{"row":25,"column":11},"action":"remove","lines":["."],"id":170}],[{"start":{"row":25,"column":9},"end":{"row":25,"column":10},"action":"remove","lines":["x"],"id":171}],[{"start":{"row":25,"column":8},"end":{"row":25,"column":9},"action":"remove","lines":["n"],"id":172}],[{"start":{"row":38,"column":0},"end":{"row":39,"column":0},"action":"remove","lines":["main()",""],"id":176}],[{"start":{"row":38,"column":0},"end":{"row":38,"column":8},"action":"remove","lines":["grafo = "],"id":175}],[{"start":{"row":39,"column":0},"end":{"row":40,"column":0},"action":"remove","lines":["print (grafo)",""],"id":174}],[{"start":{"row":0,"column":0},"end":{"row":37,"column":15},"action":"remove","lines":["import networkx as nx","","G = nx.Graph()","","def getfor(formula):","    formula = formula[1:-1]","    clauses = formula.split(\"),(\")","    tuplas = []","    for clause in clauses:","        clause = tuple(map(int,clause.split(\",\")))","        tuplas.append(clause)","    return tuplas","","def main(str):","    g = getfor(str)","    G.add_edges_from(g)","    p = hamilton(G)","    return p","","def hamilton(G):","    F = [(G,[G.nodes()[0]])]","    n = G.number_of_nodes()","    while F:","        graph,path = F.pop()","        confs = []","        ","        for node in graph.neighbors(path[-1]):","            conf_p = path[:]","            conf_p.append(node)","            conf_g = nx.Graph(graph)","            conf_g.remove_node(path[-1])","            confs.append((conf_g,conf_p))","        for g,p in confs:","            if len(p)==n:","                return p","            else:","                F.append((g,p))","    return None"],"id":173},{"start":{"row":0,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["import networkx as nx","","","def getfor(formula):","    clauses = formula.split(\"|\")","    tuplas = []","    for clause in clauses:","        clause = tuple(map(int,clause.split(\",\")))","        tuplas.append(clause)","    return tuplas","","def main():","    G = nx.Graph()","    str = input(\"Grafo:\\n\")","    g = getfor(str)","    G.add_edges_from(g)","    ","    p = hamilton(G)","    return p","","def hamilton(G):","    F = [(G,[G.nodes()[0]])]","    n = G.number_of_nodes()","    while F:","        graph,path = F.pop()","        confs = []","        for node in graph.neighbors(path[-1]):","            conf_p = path[:]","            conf_p.append(node)","            conf_g = nx.Graph(graph)","            conf_g.remove_node(path[-1])","            confs.append((conf_g,conf_p))","        for g,p in confs:","            if len(p)==n:","                return p","            else:","                F.append((g,p))","    return None","grafo = main()","print (grafo)",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":37,"column":15},"end":{"row":37,"column":15},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1463181298528}